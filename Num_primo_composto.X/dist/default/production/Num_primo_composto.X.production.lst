

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Aug 27 18:46:09 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	functab,global,class=ENTRY,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374                           
   375 ;; Function _LCD_Texto is unused but had its address taken
   376  0000                     
   377 ;; Function _dispLCD_clr is unused but had its address taken
   378  0000                     
   379 ;; Function _lcd_b0 is unused but had its address taken
   380  0000                     
   381 ;; Function _lcd_b1 is unused but had its address taken
   382  0000                     
   383                           	psect	idataBANK0
   384  0452                     __pidataBANK0:
   385                           
   386                           ;initializer for _print
   387  0452  3401               	retlw	low (fp__LCD_init-fpbase)
   388  0453  3407               	retlw	low (fp__LCD_str-fpbase)
   389  0454  3400               	retlw	0
   390  0455  3404               	retlw	low (fp__LCD_num-fpbase)
   391  0456  3400               	retlw	0
   392  0457  3400               	retlw	0
   393  0458  3400               	retlw	0
   394  0008                     _LCDbits	set	8
   395  0006                     _PORTB	set	6
   396  0086                     _TRISB	set	134
   397  0088                     _TRISDbits	set	136
   398  0189                     _ANSELH	set	393
   399                           
   400                           	psect	strings
   401  0012                     __pstrings:
   402  0012                     stringtab:
   403  0012                     __stringtab:
   404  0012                     stringcode:	
   405                           ;	String table - string pointers are 1 byte each
   406                           
   407  0012                     stringdir:
   408  0012  3000               	movlw	high stringdir
   409  0013  008A               	movwf	10
   410  0014  0804               	movf	4,w
   411  0015  0A84               	incf	4,f
   412  0016  0782               	addwf	2,f
   413  0017                     __stringbase:
   414  0017  3400               	retlw	0
   415  0018                     __end_of__stringtab:
   416  0018                     STR_1:
   417  0018  344E               	retlw	78	;'N'
   418  0019  346D               	retlw	109	;'m'
   419  001A  3472               	retlw	114	;'r'
   420  001B  3420               	retlw	32	;' '
   421  001C  3470               	retlw	112	;'p'
   422  001D  3472               	retlw	114	;'r'
   423  001E  3469               	retlw	105	;'i'
   424  001F  346D               	retlw	109	;'m'
   425  0020  346F               	retlw	111	;'o'
   426  0021  343A               	retlw	58	;':'
   427  0022  3420               	retlw	32	;' '
   428  0023  3420               	retlw	32	;' '
   429  0024  3420               	retlw	32	;' '
   430  0025  3420               	retlw	32	;' '
   431  0026  3400               	retlw	0
   432  0027                     STR_2:
   433  0027  344E               	retlw	78	;'N'
   434  0028  346D               	retlw	109	;'m'
   435  0029  3472               	retlw	114	;'r'
   436  002A  3420               	retlw	32	;' '
   437  002B  3463               	retlw	99	;'c'
   438  002C  346F               	retlw	111	;'o'
   439  002D  346D               	retlw	109	;'m'
   440  002E  3470               	retlw	112	;'p'
   441  002F  346F               	retlw	111	;'o'
   442  0030  3473               	retlw	115	;'s'
   443  0031  3474               	retlw	116	;'t'
   444  0032  346F               	retlw	111	;'o'
   445  0033  343A               	retlw	58	;':'
   446  0034  3400               	retlw	0
   447                           
   448                           	psect	cinit
   449  07ED                     start_initialization:	
   450                           ; #config settings
   451                           
   452  07ED                     __initialization:
   453                           
   454                           ; Initialize objects allocated to BANK0
   455  07ED  1383               	bcf	3,7	;select IRP bank0
   456  07EE  3032               	movlw	low (__pdataBANK0+7)
   457  07EF  00FD               	movwf	btemp+-1
   458  07F0  3004               	movlw	high __pidataBANK0
   459  07F1  00FE               	movwf	btemp
   460  07F2  3052               	movlw	low __pidataBANK0
   461  07F3  00FF               	movwf	btemp+1
   462  07F4  302B               	movlw	low __pdataBANK0
   463  07F5  0084               	movwf	4
   464  07F6  120A  118A  247A  120A  118A  	fcall	init_ram0
   465                           
   466                           ; Clear objects allocated to BANK0
   467  07FB  01B2               	clrf	__pbssBANK0& (0+127)
   468  07FC                     end_of_initialization:	
   469                           ;End of C runtime variable initialization code
   470                           
   471  07FC                     __end_of__initialization:
   472  07FC  0183               	clrf	3
   473  07FD  120A  118A  2DCD   	ljmp	_main	;jump to C main() function
   474                           
   475                           	psect	bssBANK0
   476  0032                     __pbssBANK0:
   477  0032                     _value:
   478  0032                     	ds	1
   479                           
   480                           	psect	dataBANK0
   481  002B                     __pdataBANK0:
   482  002B                     _print:
   483  002B                     	ds	7
   484                           
   485                           	psect	inittext
   486  0476                     init_fetch0:	
   487                           ;	Called with low address in FSR and high address in W
   488                           
   489  0476  087E               	movf	btemp,w
   490  0477  008A               	movwf	10
   491  0478  087F               	movf	btemp+1,w
   492  0479  0082               	movwf	2
   493  047A                     init_ram0:	
   494                           ;Called with:
   495                           ;	high address of idata address in btemp 
   496                           ;	low address of idata address in btemp+1 
   497                           ;	low address of data in FSR
   498                           ;	high address + 1 of data in btemp-1
   499                           
   500  047A  120A  118A  2476  120A  118A  	fcall	init_fetch0
   501  047F  0080               	movwf	0
   502  0480  0A84               	incf	4,f
   503  0481  0804               	movf	4,w
   504  0482  067D               	xorwf	btemp+-1,w
   505  0483  1903               	btfsc	3,2
   506  0484  3400               	retlw	0
   507  0485  0AFF               	incf	btemp+1,f
   508  0486  1903               	btfsc	3,2
   509  0487  0AFE               	incf	btemp,f
   510  0488  2C7A               	goto	init_ram0
   511                           
   512                           	psect	cstackCOMMON
   513  0070                     __pcstackCOMMON:
   514  0070                     ?_dispLCD_instReg:
   515  0070                     ??_dispLCD_instReg:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_dispLCD_dataReg:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ??_dispLCD_dataReg:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_LCD_init:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_num_primo:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_main:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?___lbmod:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_return_nump:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?___awdiv:	
   540                           ; 2 bytes @ 0x0
   541                           
   542  0070                     ?___awmod:	
   543                           ; 2 bytes @ 0x0
   544                           
   545  0070                     ___lbmod@divisor:	
   546                           ; 2 bytes @ 0x0
   547                           
   548  0070                     ___awdiv@divisor:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ___awmod@divisor:	
   552                           ; 2 bytes @ 0x0
   553                           
   554                           
   555                           ; 2 bytes @ 0x0
   556  0070                     	ds	1
   557  0071                     ??___lbmod:
   558  0071                     dispLCD_dataReg@d:	
   559                           ; 1 bytes @ 0x1
   560                           
   561                           
   562                           ; 1 bytes @ 0x1
   563  0071                     	ds	1
   564  0072                     ??_return_nump:
   565  0072                     dispLCD_instReg@i:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  0072                     ___awdiv@dividend:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  0072                     ___awmod@dividend:	
   572                           ; 2 bytes @ 0x2
   573                           
   574                           
   575                           ; 2 bytes @ 0x2
   576  0072                     	ds	1
   577  0073                     ?_dispLCD_lincol:
   578  0073                     ??_LCD_init:	
   579                           ; 1 bytes @ 0x3
   580                           
   581  0073                     dispLCD_lincol@col:	
   582                           ; 1 bytes @ 0x3
   583                           
   584                           
   585                           ; 1 bytes @ 0x3
   586  0073                     	ds	1
   587  0074                     ??_dispLCD_lincol:
   588  0074                     ??___awdiv:	
   589                           ; 1 bytes @ 0x4
   590                           
   591  0074                     ??___awmod:	
   592                           ; 1 bytes @ 0x4
   593                           
   594  0074                     ___lbmod@dividend:	
   595                           ; 1 bytes @ 0x4
   596                           
   597                           
   598                           ; 1 bytes @ 0x4
   599  0074                     	ds	1
   600  0075                     dispLCD_lincol@lin:
   601  0075                     ___awdiv@counter:	
   602                           ; 1 bytes @ 0x5
   603                           
   604  0075                     ___awmod@counter:	
   605                           ; 1 bytes @ 0x5
   606                           
   607  0075                     ___lbmod@counter:	
   608                           ; 1 bytes @ 0x5
   609                           
   610                           
   611                           ; 1 bytes @ 0x5
   612  0075                     	ds	1
   613  0076                     ?_LCD_str:
   614  0076                     LCD_str@str:	
   615                           ; 1 bytes @ 0x6
   616                           
   617  0076                     ___awdiv@sign:	
   618                           ; 1 bytes @ 0x6
   619                           
   620  0076                     ___awmod@sign:	
   621                           ; 1 bytes @ 0x6
   622                           
   623  0076                     ___lbmod@rem:	
   624                           ; 1 bytes @ 0x6
   625                           
   626                           
   627                           ; 1 bytes @ 0x6
   628  0076                     	ds	1
   629  0077                     ??_LCD_str:
   630  0077                     ??_num_primo:	
   631                           ; 1 bytes @ 0x7
   632                           
   633  0077                     ___awdiv@quotient:	
   634                           ; 1 bytes @ 0x7
   635                           
   636                           
   637                           ; 2 bytes @ 0x7
   638  0077                     	ds	1
   639  0078                     num_primo@x:
   640                           
   641                           ; 1 bytes @ 0x8
   642  0078                     	ds	1
   643  0079                     ?_LCD_num:
   644  0079                     LCD_num@lin:	
   645                           ; 1 bytes @ 0x9
   646                           
   647  0079                     num_primo@cont:	
   648                           ; 1 bytes @ 0x9
   649                           
   650                           
   651                           ; 1 bytes @ 0x9
   652  0079                     	ds	1
   653  007A                     LCD_num@col:
   654  007A                     num_primo@num_p:	
   655                           ; 1 bytes @ 0xA
   656                           
   657                           
   658                           ; 1 bytes @ 0xA
   659  007A                     	ds	1
   660  007B                     num_primo@i:
   661  007B                     LCD_num@num:	
   662                           ; 1 bytes @ 0xB
   663                           
   664                           
   665                           ; 2 bytes @ 0xB
   666  007B                     	ds	2
   667  007D                     LCD_num@tam:
   668                           
   669                           ; 1 bytes @ 0xD
   670  007D                     	ds	1
   671                           
   672                           	psect	cstackBANK0
   673  0020                     __pcstackBANK0:
   674  0020                     ??_LCD_num:
   675                           
   676                           ; 1 bytes @ 0x0
   677  0020                     	ds	3
   678  0023                     LCD_num@size:
   679                           
   680                           ; 1 bytes @ 0x3
   681  0023                     	ds	1
   682  0024                     LCD_num@sinal:
   683                           
   684                           ; 1 bytes @ 0x4
   685  0024                     	ds	1
   686  0025                     LCD_num@div:
   687                           
   688                           ; 2 bytes @ 0x5
   689  0025                     	ds	2
   690  0027                     ??_main:
   691                           
   692                           ; 1 bytes @ 0x7
   693  0027                     	ds	2
   694  0029                     main@valor:
   695                           
   696                           ; 2 bytes @ 0x9
   697  0029                     	ds	2
   698                           
   699                           	psect	maintext
   700  05CD                     __pmaintext:	
   701 ;;
   702 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   703 ;;
   704 ;; *************** function _main *****************
   705 ;; Defined at:
   706 ;;		line 37 in file "main.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  valor           2    9[BANK0 ] int 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : B00/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       0       0       0       0
   721 ;;      Locals:         0       2       0       0       0
   722 ;;      Temps:          0       2       0       0       0
   723 ;;      Totals:         0       4       0       0       0
   724 ;;Total ram usage:        4 bytes
   725 ;; Hardware stack levels required when called: 3
   726 ;; This function calls:
   727 ;;		_LCD_init
   728 ;;		_LCD_num
   729 ;;		_LCD_str
   730 ;;		_num_primo
   731 ;;		_return_nump
   732 ;; This function is called by:
   733 ;;		Startup code after reset
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           
   738                           ;psect for function _main
   739  05CD                     _main:
   740  05CD                     l1254:	
   741                           ;incstack = 0
   742                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   743                           
   744                           
   745                           ;main.c: 39:     int valor = 11;
   746  05CD  300B               	movlw	11
   747  05CE  1283               	bcf	3,5	;RP0=0, select bank0
   748  05CF  1303               	bcf	3,6	;RP1=0, select bank0
   749  05D0  00A9               	movwf	main@valor
   750  05D1  3000               	movlw	0
   751  05D2  00AA               	movwf	main@valor+1
   752  05D3                     l1256:
   753                           
   754                           ;main.c: 41:     print.init();
   755  05D3  082B               	movf	_print,w
   756  05D4  120A  118A  2003  120A  118A  	fcall	fptable
   757  05D9                     l1258:
   758                           
   759                           ;main.c: 44:     {;main.c: 45:         num_primo(valor);
   760  05D9  1283               	bcf	3,5	;RP0=0, select bank0
   761  05DA  1303               	bcf	3,6	;RP1=0, select bank0
   762  05DB  0829               	movf	main@valor,w
   763  05DC  120A  118A  2508  120A  118A  	fcall	_num_primo
   764  05E1                     l1260:
   765                           
   766                           ;main.c: 48:         if(return_nump())
   767  05E1  120A  118A  2459  120A  118A  	fcall	_return_nump
   768  05E6  0870               	movf	?_return_nump,w
   769  05E7  0471               	iorwf	?_return_nump+1,w
   770  05E8  1903               	btfsc	3,2
   771  05E9  2DEB               	goto	u951
   772  05EA  2DEC               	goto	u950
   773  05EB                     u951:
   774  05EB  2E0E               	goto	l1266
   775  05EC                     u950:
   776  05EC                     l1262:
   777                           
   778                           ;main.c: 49:         {;main.c: 50:                print.string("Nmr primo:    ");
   779  05EC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   780  05ED  1283               	bcf	3,5	;RP0=0, select bank0
   781  05EE  1303               	bcf	3,6	;RP1=0, select bank0
   782  05EF  00A7               	movwf	??_main
   783  05F0  0827               	movf	??_main,w
   784  05F1  00F6               	movwf	LCD_str@str
   785  05F2  082C               	movf	low ((_print| 0+1)),w
   786  05F3  120A  118A  2003  120A  118A  	fcall	fptable
   787  05F8                     l1264:
   788                           
   789                           ;main.c: 51:                print.number(0,13,valor,3);
   790  05F8  01F9               	clrf	LCD_num@lin
   791  05F9  300D               	movlw	13
   792  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   793  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   794  05FC  00A7               	movwf	??_main
   795  05FD  0827               	movf	??_main,w
   796  05FE  00FA               	movwf	LCD_num@col
   797  05FF  082A               	movf	main@valor+1,w
   798  0600  00FC               	movwf	LCD_num@num+1
   799  0601  0829               	movf	main@valor,w
   800  0602  00FB               	movwf	LCD_num@num
   801  0603  3003               	movlw	3
   802  0604  00A8               	movwf	??_main+1
   803  0605  0828               	movf	??_main+1,w
   804  0606  00FD               	movwf	LCD_num@tam
   805  0607  082E               	movf	low ((_print| 0+3)),w
   806  0608  120A  118A  2003  120A  118A  	fcall	fptable
   807                           
   808                           ;main.c: 52:         }
   809  060D  2E1A               	goto	l1268
   810  060E                     l1266:
   811  060E  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   812  060F  1283               	bcf	3,5	;RP0=0, select bank0
   813  0610  1303               	bcf	3,6	;RP1=0, select bank0
   814  0611  00A7               	movwf	??_main
   815  0612  0827               	movf	??_main,w
   816  0613  00F6               	movwf	LCD_str@str
   817  0614  082C               	movf	low ((_print| 0+1)),w
   818  0615  120A  118A  2003  120A  118A  	fcall	fptable
   819  061A                     l1268:
   820                           
   821                           ;main.c: 54:                print.number(0,13,valor,3);
   822  061A  01F9               	clrf	LCD_num@lin
   823  061B  300D               	movlw	13
   824  061C  1283               	bcf	3,5	;RP0=0, select bank0
   825  061D  1303               	bcf	3,6	;RP1=0, select bank0
   826  061E  00A7               	movwf	??_main
   827  061F  0827               	movf	??_main,w
   828  0620  00FA               	movwf	LCD_num@col
   829  0621  082A               	movf	main@valor+1,w
   830  0622  00FC               	movwf	LCD_num@num+1
   831  0623  0829               	movf	main@valor,w
   832  0624  00FB               	movwf	LCD_num@num
   833  0625  3003               	movlw	3
   834  0626  00A8               	movwf	??_main+1
   835  0627  0828               	movf	??_main+1,w
   836  0628  00FD               	movwf	LCD_num@tam
   837  0629  082E               	movf	low ((_print| 0+3)),w
   838  062A  120A  118A  2003  120A  118A  	fcall	fptable
   839  062F  2DD9               	goto	l1258
   840  0630  120A  118A  2800   	ljmp	start
   841  0633                     __end_of_main:
   842                           
   843                           	psect	text1
   844  0459                     __ptext1:	
   845 ;; *************** function _return_nump *****************
   846 ;; Defined at:
   847 ;;		line 32 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  2    0[COMMON] int 
   854 ;; Registers used:
   855 ;;		wreg
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         2       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          2       0       0       0       0
   864 ;;      Totals:         4       0       0       0       0
   865 ;;Total ram usage:        4 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _return_nump
   876  0459                     _return_nump:
   877  0459                     l1236:	
   878                           ;incstack = 0
   879                           ; Regs used in _return_nump: [wreg]
   880                           
   881                           
   882                           ;main.c: 34:     return(value);
   883  0459  1283               	bcf	3,5	;RP0=0, select bank0
   884  045A  1303               	bcf	3,6	;RP1=0, select bank0
   885  045B  0832               	movf	_value,w
   886  045C  00F2               	movwf	??_return_nump
   887  045D  01F3               	clrf	??_return_nump+1
   888  045E  0872               	movf	??_return_nump,w
   889  045F  00F0               	movwf	?_return_nump
   890  0460  0873               	movf	??_return_nump+1,w
   891  0461  00F1               	movwf	?_return_nump+1
   892  0462                     l110:
   893  0462  0008               	return
   894  0463                     __end_of_return_nump:
   895                           
   896                           	psect	text2
   897  0508                     __ptext2:	
   898 ;; *************** function _num_primo *****************
   899 ;; Defined at:
   900 ;;		line 16 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  x               1    wreg     unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  x               1    8[COMMON] unsigned char 
   905 ;;  i               1   11[COMMON] unsigned char 
   906 ;;  num_p           1   10[COMMON] unsigned char 
   907 ;;  cont            1    9[COMMON] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0, pclath, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       0       0       0       0
   918 ;;      Locals:         4       0       0       0       0
   919 ;;      Temps:          1       0       0       0       0
   920 ;;      Totals:         5       0       0       0       0
   921 ;;Total ram usage:        5 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 1
   924 ;; This function calls:
   925 ;;		___lbmod
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _num_primo
   933  0508                     _num_primo:
   934                           
   935                           ;incstack = 0
   936                           ; Regs used in _num_primo: [wreg+status,2+status,0+pclath+cstack]
   937                           ;num_primo@x stored from wreg
   938  0508  00F8               	movwf	num_primo@x
   939  0509                     l1218:
   940                           
   941                           ;main.c: 16: void num_primo (char x);main.c: 17: {;main.c: 18:     char cont, num_p, i;;
      +                          main.c: 20:     cont = 0; num_p = x; i = 0;
   942  0509  01F9               	clrf	num_primo@cont
   943  050A                     l1220:
   944  050A  0878               	movf	num_primo@x,w
   945  050B  00F7               	movwf	??_num_primo
   946  050C  0877               	movf	??_num_primo,w
   947  050D  00FA               	movwf	num_primo@num_p
   948  050E                     l1222:
   949  050E  01FB               	clrf	num_primo@i
   950                           
   951                           ;main.c: 22:     while( i <= num_p )
   952  050F  2D35               	goto	l1234
   953  0510                     l1224:
   954                           
   955                           ;main.c: 23:     {;main.c: 24:         if(num_p % i == 0) cont++;
   956  0510  087B               	movf	num_primo@i,w
   957  0511  00F7               	movwf	??_num_primo
   958  0512  0877               	movf	??_num_primo,w
   959  0513  00F0               	movwf	___lbmod@divisor
   960  0514  087A               	movf	num_primo@num_p,w
   961  0515  120A  118A  2489  120A  118A  	fcall	___lbmod
   962  051A  3A00               	xorlw	0
   963  051B  1D03               	skipz
   964  051C  2D1E               	goto	u911
   965  051D  2D1F               	goto	u910
   966  051E                     u911:
   967  051E  2D23               	goto	l103
   968  051F                     u910:
   969  051F                     l1226:
   970  051F  3001               	movlw	1
   971  0520  00F7               	movwf	??_num_primo
   972  0521  0877               	movf	??_num_primo,w
   973  0522  07F9               	addwf	num_primo@cont,f
   974  0523                     l103:
   975                           
   976                           ;main.c: 25:         if(cont == 2) value = 1;
   977  0523  3002               	movlw	2
   978  0524  0679               	xorwf	num_primo@cont,w
   979  0525  1D03               	btfss	3,2
   980  0526  2D28               	goto	u921
   981  0527  2D29               	goto	u920
   982  0528                     u921:
   983  0528  2D2E               	goto	l1230
   984  0529                     u920:
   985  0529                     l1228:
   986  0529  1283               	bcf	3,5	;RP0=0, select bank0
   987  052A  1303               	bcf	3,6	;RP1=0, select bank0
   988  052B  01B2               	clrf	_value
   989  052C  0AB2               	incf	_value,f
   990  052D  2D31               	goto	l1232
   991  052E                     l1230:
   992  052E  1283               	bcf	3,5	;RP0=0, select bank0
   993  052F  1303               	bcf	3,6	;RP1=0, select bank0
   994  0530  01B2               	clrf	_value
   995  0531                     l1232:
   996                           
   997                           ;main.c: 28:         i++;
   998  0531  3001               	movlw	1
   999  0532  00F7               	movwf	??_num_primo
  1000  0533  0877               	movf	??_num_primo,w
  1001  0534  07FB               	addwf	num_primo@i,f
  1002  0535                     l1234:
  1003                           
  1004                           ;main.c: 22:     while( i <= num_p )
  1005  0535  087B               	movf	num_primo@i,w
  1006  0536  027A               	subwf	num_primo@num_p,w
  1007  0537  1803               	skipnc
  1008  0538  2D3A               	goto	u931
  1009  0539  2D3B               	goto	u930
  1010  053A                     u931:
  1011  053A  2D10               	goto	l1224
  1012  053B                     u930:
  1013  053B                     l107:
  1014  053B  0008               	return
  1015  053C                     __end_of_num_primo:
  1016                           
  1017                           	psect	text3
  1018  0489                     __ptext3:	
  1019 ;; *************** function ___lbmod *****************
  1020 ;; Defined at:
  1021 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbmod.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  dividend        1    wreg     unsigned char 
  1024 ;;  divisor         1    0[COMMON] unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  dividend        1    4[COMMON] unsigned char 
  1027 ;;  rem             1    6[COMMON] unsigned char 
  1028 ;;  counter         1    5[COMMON] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      unsigned char 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         1       0       0       0       0
  1039 ;;      Locals:         3       0       0       0       0
  1040 ;;      Temps:          3       0       0       0       0
  1041 ;;      Totals:         7       0       0       0       0
  1042 ;;Total ram usage:        7 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_num_primo
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function ___lbmod
  1053  0489                     ___lbmod:
  1054                           
  1055                           ;incstack = 0
  1056                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  1057                           ;___lbmod@dividend stored from wreg
  1058  0489  00F4               	movwf	___lbmod@dividend
  1059  048A                     l1142:
  1060  048A  3008               	movlw	8
  1061  048B  00F1               	movwf	??___lbmod
  1062  048C  0871               	movf	??___lbmod,w
  1063  048D  00F5               	movwf	___lbmod@counter
  1064  048E                     l1144:
  1065  048E  01F6               	clrf	___lbmod@rem
  1066  048F                     l1146:
  1067  048F  0874               	movf	___lbmod@dividend,w
  1068  0490  00F1               	movwf	??___lbmod
  1069  0491  3007               	movlw	7
  1070  0492                     u775:
  1071  0492  1003               	clrc
  1072  0493  0CF1               	rrf	??___lbmod,f
  1073  0494  3EFF               	addlw	-1
  1074  0495  1D03               	skipz
  1075  0496  2C92               	goto	u775
  1076  0497  0876               	movf	___lbmod@rem,w
  1077  0498  00F2               	movwf	??___lbmod+1
  1078  0499  0772               	addwf	??___lbmod+1,w
  1079  049A  0471               	iorwf	??___lbmod,w
  1080  049B  00F3               	movwf	??___lbmod+2
  1081  049C  0873               	movf	??___lbmod+2,w
  1082  049D  00F6               	movwf	___lbmod@rem
  1083  049E                     l1148:
  1084  049E  1003               	clrc
  1085  049F  0DF4               	rlf	___lbmod@dividend,f
  1086  04A0                     l1150:
  1087  04A0  0870               	movf	___lbmod@divisor,w
  1088  04A1  0276               	subwf	___lbmod@rem,w
  1089  04A2  1C03               	skipc
  1090  04A3  2CA5               	goto	u781
  1091  04A4  2CA6               	goto	u780
  1092  04A5                     u781:
  1093  04A5  2CA8               	goto	l416
  1094  04A6                     u780:
  1095  04A6                     l1152:
  1096  04A6  0870               	movf	___lbmod@divisor,w
  1097  04A7  02F6               	subwf	___lbmod@rem,f
  1098  04A8                     l416:
  1099  04A8  3001               	movlw	1
  1100  04A9  02F5               	subwf	___lbmod@counter,f
  1101  04AA  1D03               	btfss	3,2
  1102  04AB  2CAD               	goto	u791
  1103  04AC  2CAE               	goto	u790
  1104  04AD                     u791:
  1105  04AD  2C8F               	goto	l1146
  1106  04AE                     u790:
  1107  04AE                     l1154:
  1108  04AE  0876               	movf	___lbmod@rem,w
  1109  04AF                     l418:
  1110  04AF  0008               	return
  1111  04B0                     __end_of___lbmod:
  1112                           
  1113                           	psect	text4
  1114  053C                     __ptext4:	
  1115 ;; *************** function _LCD_str *****************
  1116 ;; Defined at:
  1117 ;;		line 135 in file "dispLCD4vias.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  str             1    6[COMMON] PTR const unsigned char 
  1120 ;;		 -> STR_2(14), STR_1(15), 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         1       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0
  1134 ;;      Temps:          1       0       0       0       0
  1135 ;;      Totals:         2       0       0       0       0
  1136 ;;Total ram usage:        2 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 2
  1139 ;; This function calls:
  1140 ;;		_dispLCD_dataReg
  1141 ;;		_dispLCD_lincol
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _LCD_str
  1149  053C                     _LCD_str:
  1150  053C                     l1172:	
  1151                           ;incstack = 0
  1152                           ; Regs used in _LCD_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1153                           
  1154                           
  1155                           ;dispLCD4vias.c: 135: void LCD_str( const char * str );dispLCD4vias.c: 136: {;dispLCD4vi
      +                          as.c: 137:     dispLCD_lincol( 0, 0 );
  1156  053C  01F3               	clrf	dispLCD_lincol@col
  1157  053D  3000               	movlw	0
  1158  053E  120A  118A  2463  120A  118A  	fcall	_dispLCD_lincol
  1159                           
  1160                           ;dispLCD4vias.c: 139:     while( *str )
  1161  0543  2D67               	goto	l1182
  1162  0544                     l1174:
  1163                           
  1164                           ;dispLCD4vias.c: 140:     {;dispLCD4vias.c: 141:         if( *str == '\n' )
  1165  0544  0876               	movf	LCD_str@str,w
  1166  0545  0084               	movwf	4
  1167  0546  120A  118A  2012  120A  118A  	fcall	stringdir
  1168  054B  3A0A               	xorlw	10
  1169  054C  1D03               	skipz
  1170  054D  2D4F               	goto	u801
  1171  054E  2D50               	goto	u800
  1172  054F                     u801:
  1173  054F  2D57               	goto	l1178
  1174  0550                     u800:
  1175  0550                     l1176:
  1176                           
  1177                           ;dispLCD4vias.c: 142:         {;dispLCD4vias.c: 143:             dispLCD_lincol(1,0);
  1178  0550  01F3               	clrf	dispLCD_lincol@col
  1179  0551  3001               	movlw	1
  1180  0552  120A  118A  2463  120A  118A  	fcall	_dispLCD_lincol
  1181  0557                     l1178:
  1182                           
  1183                           ;dispLCD4vias.c: 145:         dispLCD_dataReg( *str );
  1184  0557  0876               	movf	LCD_str@str,w
  1185  0558  0084               	movwf	4
  1186  0559  120A  118A  2012  120A  118A  	fcall	stringdir
  1187  055E  120A  118A  24B0  120A  118A  	fcall	_dispLCD_dataReg
  1188  0563                     l1180:
  1189                           
  1190                           ;dispLCD4vias.c: 146:         ++str;
  1191  0563  3001               	movlw	1
  1192  0564  00F7               	movwf	??_LCD_str
  1193  0565  0877               	movf	??_LCD_str,w
  1194  0566  07F6               	addwf	LCD_str@str,f
  1195  0567                     l1182:
  1196                           
  1197                           ;dispLCD4vias.c: 139:     while( *str )
  1198  0567  0876               	movf	LCD_str@str,w
  1199  0568  0084               	movwf	4
  1200  0569  120A  118A  2012  120A  118A  	fcall	stringdir
  1201  056E  3A00               	xorlw	0
  1202  056F  1D03               	skipz
  1203  0570  2D72               	goto	u811
  1204  0571  2D73               	goto	u810
  1205  0572                     u811:
  1206  0572  2D44               	goto	l1174
  1207  0573                     u810:
  1208  0573                     l48:
  1209  0573  0008               	return
  1210  0574                     __end_of_LCD_str:
  1211                           
  1212                           	psect	text5
  1213  070E                     __ptext5:	
  1214 ;; *************** function _LCD_num *****************
  1215 ;; Defined at:
  1216 ;;		line 166 in file "dispLCD4vias.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  lin             1    9[COMMON] unsigned char 
  1219 ;;  col             1   10[COMMON] unsigned char 
  1220 ;;  num             2   11[COMMON] int 
  1221 ;;  tam             1   13[COMMON] unsigned char 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  div             2    5[BANK0 ] int 
  1224 ;;  sinal           1    4[BANK0 ] unsigned char 
  1225 ;;  size            1    3[BANK0 ] unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         5       0       0       0       0
  1236 ;;      Locals:         0       4       0       0       0
  1237 ;;      Temps:          0       3       0       0       0
  1238 ;;      Totals:         5       7       0       0       0
  1239 ;;Total ram usage:       12 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 2
  1242 ;; This function calls:
  1243 ;;		___awdiv
  1244 ;;		___awmod
  1245 ;;		_dispLCD_dataReg
  1246 ;;		_dispLCD_lincol
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _LCD_num
  1254  070E                     _LCD_num:
  1255  070E                     l1184:	
  1256                           ;incstack = 0
  1257                           ; Regs used in _LCD_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1258                           
  1259                           
  1260                           ;dispLCD4vias.c: 166: void LCD_num( unsigned char lin, unsigned char col, int num, unsig
      +                          ned char tam );dispLCD4vias.c: 167: {;dispLCD4vias.c: 168:     int div;;dispLCD4vias.c: 
      +                          169:     unsigned char size;;dispLCD4vias.c: 170:     char sinal;;dispLCD4vias.c: 172:  
      +                             sinal = num < 0;
  1261  070E  1BFC               	btfsc	LCD_num@num+1,7
  1262  070F  2F11               	goto	u821
  1263  0710  2F13               	goto	u820
  1264  0711                     u821:
  1265  0711  3001               	movlw	1
  1266  0712  2F14               	goto	u830
  1267  0713                     u820:
  1268  0713  3000               	movlw	0
  1269  0714                     u830:
  1270  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0716  00A0               	movwf	??_LCD_num
  1273  0717  0820               	movf	??_LCD_num,w
  1274  0718  00A4               	movwf	LCD_num@sinal
  1275  0719                     l1186:
  1276                           
  1277                           ;dispLCD4vias.c: 173:     if( sinal ) num = (~num) + 1;
  1278  0719  0824               	movf	LCD_num@sinal,w
  1279  071A  1903               	btfsc	3,2
  1280  071B  2F1D               	goto	u841
  1281  071C  2F1E               	goto	u840
  1282  071D                     u841:
  1283  071D  2F23               	goto	l1190
  1284  071E                     u840:
  1285  071E                     l1188:
  1286  071E  09FB               	comf	LCD_num@num,f
  1287  071F  09FC               	comf	LCD_num@num+1,f
  1288  0720  0AFB               	incf	LCD_num@num,f
  1289  0721  1903               	skipnz
  1290  0722  0AFC               	incf	LCD_num@num+1,f
  1291  0723                     l1190:
  1292                           
  1293                           ;dispLCD4vias.c: 176:     dispLCD_lincol(lin, col);
  1294  0723  087A               	movf	LCD_num@col,w
  1295  0724  00A0               	movwf	??_LCD_num
  1296  0725  0820               	movf	??_LCD_num,w
  1297  0726  00F3               	movwf	dispLCD_lincol@col
  1298  0727  0879               	movf	LCD_num@lin,w
  1299  0728  120A  118A  2463  120A  118A  	fcall	_dispLCD_lincol
  1300  072D                     l1192:
  1301                           
  1302                           ;dispLCD4vias.c: 178:     div=10000; size = 5;
  1303  072D  3010               	movlw	16
  1304  072E  1283               	bcf	3,5	;RP0=0, select bank0
  1305  072F  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0730  00A5               	movwf	LCD_num@div
  1307  0731  3027               	movlw	39
  1308  0732  00A6               	movwf	LCD_num@div+1
  1309  0733                     l1194:
  1310  0733  3005               	movlw	5
  1311  0734  00A0               	movwf	??_LCD_num
  1312  0735  0820               	movf	??_LCD_num,w
  1313  0736  00A3               	movwf	LCD_num@size
  1314                           
  1315                           ;dispLCD4vias.c: 180:     while( div >= 1 )
  1316  0737  2F64               	goto	l1202
  1317  0738                     l1196:
  1318                           
  1319                           ;dispLCD4vias.c: 181:     {;dispLCD4vias.c: 182:         if( num/div == 0 )
  1320  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1322  073A  0826               	movf	LCD_num@div+1,w
  1323  073B  00F1               	movwf	___awdiv@divisor+1
  1324  073C  0825               	movf	LCD_num@div,w
  1325  073D  00F0               	movwf	___awdiv@divisor
  1326  073E  087C               	movf	LCD_num@num+1,w
  1327  073F  00F3               	movwf	___awdiv@dividend+1
  1328  0740  087B               	movf	LCD_num@num,w
  1329  0741  00F2               	movwf	___awdiv@dividend
  1330  0742  120A  118A  2633  120A  118A  	fcall	___awdiv
  1331  0747  0870               	movf	?___awdiv,w
  1332  0748  0471               	iorwf	?___awdiv+1,w
  1333  0749  1D03               	btfss	3,2
  1334  074A  2F4C               	goto	u851
  1335  074B  2F4D               	goto	u850
  1336  074C                     u851:
  1337  074C  2F7A               	goto	l1208
  1338  074D                     u850:
  1339  074D                     l1198:
  1340                           
  1341                           ;dispLCD4vias.c: 183:             --size;
  1342  074D  3001               	movlw	1
  1343  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1344  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0750  02A3               	subwf	LCD_num@size,f
  1346  0751                     l1200:
  1347                           
  1348                           ;dispLCD4vias.c: 186:         div/=10;
  1349  0751  300A               	movlw	10
  1350  0752  00F0               	movwf	___awdiv@divisor
  1351  0753  3000               	movlw	0
  1352  0754  00F1               	movwf	___awdiv@divisor+1
  1353  0755  0826               	movf	LCD_num@div+1,w
  1354  0756  00F3               	movwf	___awdiv@dividend+1
  1355  0757  0825               	movf	LCD_num@div,w
  1356  0758  00F2               	movwf	___awdiv@dividend
  1357  0759  120A  118A  2633  120A  118A  	fcall	___awdiv
  1358  075E  0871               	movf	?___awdiv+1,w
  1359  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0761  00A6               	movwf	LCD_num@div+1
  1362  0762  0870               	movf	?___awdiv,w
  1363  0763  00A5               	movwf	LCD_num@div
  1364  0764                     l1202:
  1365                           
  1366                           ;dispLCD4vias.c: 180:     while( div >= 1 )
  1367  0764  0826               	movf	LCD_num@div+1,w
  1368  0765  3A80               	xorlw	128
  1369  0766  00FF               	movwf	btemp+1
  1370  0767  3080               	movlw	128
  1371  0768  027F               	subwf	btemp+1,w
  1372  0769  1D03               	skipz
  1373  076A  2F6D               	goto	u865
  1374  076B  3001               	movlw	1
  1375  076C  0225               	subwf	LCD_num@div,w
  1376  076D                     u865:
  1377  076D  1803               	skipnc
  1378  076E  2F70               	goto	u861
  1379  076F  2F71               	goto	u860
  1380  0770                     u861:
  1381  0770  2F38               	goto	l1196
  1382  0771                     u860:
  1383  0771  2F7A               	goto	l1208
  1384  0772                     l1204:
  1385                           
  1386                           ;dispLCD4vias.c: 191:     {;dispLCD4vias.c: 192:       dispLCD_dataReg(' ');
  1387  0772  3020               	movlw	32
  1388  0773  120A  118A  24B0  120A  118A  	fcall	_dispLCD_dataReg
  1389  0778                     l1206:
  1390                           
  1391                           ;dispLCD4vias.c: 193:       --tam;
  1392  0778  3001               	movlw	1
  1393  0779  02FD               	subwf	LCD_num@tam,f
  1394  077A                     l1208:
  1395                           
  1396                           ;dispLCD4vias.c: 190:     while( tam > (size+sinal) && tam > 1 )
  1397  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1398  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1399  077C  0823               	movf	LCD_num@size,w
  1400  077D  0724               	addwf	LCD_num@sinal,w
  1401  077E  00A0               	movwf	??_LCD_num
  1402  077F  01A1               	clrf	??_LCD_num+1
  1403  0780  0DA1               	rlf	??_LCD_num+1,f
  1404  0781  0821               	movf	??_LCD_num+1,w
  1405  0782  3A80               	xorlw	128
  1406  0783  00A2               	movwf	??_LCD_num+2
  1407  0784  3080               	movlw	128
  1408  0785  0222               	subwf	??_LCD_num+2,w
  1409  0786  1D03               	skipz
  1410  0787  2F8A               	goto	u875
  1411  0788  087D               	movf	LCD_num@tam,w
  1412  0789  0220               	subwf	??_LCD_num,w
  1413  078A                     u875:
  1414  078A  1803               	skipnc
  1415  078B  2F8D               	goto	u871
  1416  078C  2F8E               	goto	u870
  1417  078D                     u871:
  1418  078D  2F94               	goto	l1212
  1419  078E                     u870:
  1420  078E                     l1210:
  1421  078E  3002               	movlw	2
  1422  078F  027D               	subwf	LCD_num@tam,w
  1423  0790  1803               	skipnc
  1424  0791  2F93               	goto	u881
  1425  0792  2F94               	goto	u880
  1426  0793                     u881:
  1427  0793  2F72               	goto	l1204
  1428  0794                     u880:
  1429  0794                     l1212:
  1430                           
  1431                           ;dispLCD4vias.c: 196:     if( sinal )
  1432  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0796  0824               	movf	LCD_num@sinal,w
  1435  0797  1903               	btfsc	3,2
  1436  0798  2F9A               	goto	u891
  1437  0799  2F9B               	goto	u890
  1438  079A                     u891:
  1439  079A  2FA1               	goto	l69
  1440  079B                     u890:
  1441  079B                     l1214:
  1442                           
  1443                           ;dispLCD4vias.c: 197:         dispLCD_dataReg('-');
  1444  079B  302D               	movlw	45
  1445  079C  120A  118A  24B0  120A  118A  	fcall	_dispLCD_dataReg
  1446  07A1                     l69:	
  1447                           ;dispLCD4vias.c: 199:     do
  1448                           
  1449                           
  1450                           ;dispLCD4vias.c: 200:     {;dispLCD4vias.c: 201:         dispLCD_dataReg( (num / div) + 
      +                          '0' );
  1451  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1452  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1453  07A3  0826               	movf	LCD_num@div+1,w
  1454  07A4  00F1               	movwf	___awdiv@divisor+1
  1455  07A5  0825               	movf	LCD_num@div,w
  1456  07A6  00F0               	movwf	___awdiv@divisor
  1457  07A7  087C               	movf	LCD_num@num+1,w
  1458  07A8  00F3               	movwf	___awdiv@dividend+1
  1459  07A9  087B               	movf	LCD_num@num,w
  1460  07AA  00F2               	movwf	___awdiv@dividend
  1461  07AB  120A  118A  2633  120A  118A  	fcall	___awdiv
  1462  07B0  0870               	movf	?___awdiv,w
  1463  07B1  3E30               	addlw	48
  1464  07B2  120A  118A  24B0  120A  118A  	fcall	_dispLCD_dataReg
  1465                           
  1466                           ;dispLCD4vias.c: 202:         num = num % div;
  1467  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1468  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1469  07B9  0826               	movf	LCD_num@div+1,w
  1470  07BA  00F1               	movwf	___awmod@divisor+1
  1471  07BB  0825               	movf	LCD_num@div,w
  1472  07BC  00F0               	movwf	___awmod@divisor
  1473  07BD  087C               	movf	LCD_num@num+1,w
  1474  07BE  00F3               	movwf	___awmod@dividend+1
  1475  07BF  087B               	movf	LCD_num@num,w
  1476  07C0  00F2               	movwf	___awmod@dividend
  1477  07C1  120A  118A  2574  120A  118A  	fcall	___awmod
  1478  07C6  0871               	movf	?___awmod+1,w
  1479  07C7  00FC               	movwf	LCD_num@num+1
  1480  07C8  0870               	movf	?___awmod,w
  1481  07C9  00FB               	movwf	LCD_num@num
  1482                           
  1483                           ;dispLCD4vias.c: 203:         div/=10;
  1484  07CA  300A               	movlw	10
  1485  07CB  00F0               	movwf	___awdiv@divisor
  1486  07CC  3000               	movlw	0
  1487  07CD  00F1               	movwf	___awdiv@divisor+1
  1488  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1489  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1490  07D0  0826               	movf	LCD_num@div+1,w
  1491  07D1  00F3               	movwf	___awdiv@dividend+1
  1492  07D2  0825               	movf	LCD_num@div,w
  1493  07D3  00F2               	movwf	___awdiv@dividend
  1494  07D4  120A  118A  2633  120A  118A  	fcall	___awdiv
  1495  07D9  0871               	movf	?___awdiv+1,w
  1496  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1497  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1498  07DC  00A6               	movwf	LCD_num@div+1
  1499  07DD  0870               	movf	?___awdiv,w
  1500  07DE  00A5               	movwf	LCD_num@div
  1501  07DF                     l1216:
  1502                           
  1503                           ;dispLCD4vias.c: 204:     }
  1504  07DF  0826               	movf	LCD_num@div+1,w
  1505  07E0  3A80               	xorlw	128
  1506  07E1  00FF               	movwf	btemp+1
  1507  07E2  3080               	movlw	128
  1508  07E3  027F               	subwf	btemp+1,w
  1509  07E4  1D03               	skipz
  1510  07E5  2FE8               	goto	u905
  1511  07E6  3001               	movlw	1
  1512  07E7  0225               	subwf	LCD_num@div,w
  1513  07E8                     u905:
  1514  07E8  1803               	skipnc
  1515  07E9  2FEB               	goto	u901
  1516  07EA  2FEC               	goto	u900
  1517  07EB                     u901:
  1518  07EB  2FA1               	goto	l69
  1519  07EC                     u900:
  1520  07EC                     l71:
  1521  07EC  0008               	return
  1522  07ED                     __end_of_LCD_num:
  1523                           
  1524                           	psect	text6
  1525  0463                     __ptext6:	
  1526 ;; *************** function _dispLCD_lincol *****************
  1527 ;; Defined at:
  1528 ;;		line 104 in file "dispLCD4vias.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  lin             1    wreg     unsigned char 
  1531 ;;  col             1    3[COMMON] unsigned char 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  lin             1    5[COMMON] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, pclath, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1543 ;;      Params:         1       0       0       0       0
  1544 ;;      Locals:         1       0       0       0       0
  1545 ;;      Temps:          1       0       0       0       0
  1546 ;;      Totals:         3       0       0       0       0
  1547 ;;Total ram usage:        3 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 1
  1550 ;; This function calls:
  1551 ;;		_dispLCD_instReg
  1552 ;; This function is called by:
  1553 ;;		_LCD_str
  1554 ;;		_LCD_num
  1555 ;;		_LCD_Texto
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _dispLCD_lincol
  1561  0463                     _dispLCD_lincol:
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  1565                           ;dispLCD_lincol@lin stored from wreg
  1566  0463  00F5               	movwf	dispLCD_lincol@lin
  1567  0464                     l1058:
  1568                           
  1569                           ;dispLCD4vias.c: 104: void dispLCD_lincol( unsigned char lin, unsigned char col);dispLCD
      +                          4vias.c: 105: {;dispLCD4vias.c: 106:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0
      +                          x00) & 0x7F)) );
  1570  0464  0875               	movf	dispLCD_lincol@lin,w
  1571  0465  00F4               	movwf	??_dispLCD_lincol
  1572  0466  3006               	movlw	6
  1573  0467                     u575:
  1574  0467  1003               	clrc
  1575  0468  0DF4               	rlf	??_dispLCD_lincol,f
  1576  0469  3EFF               	addlw	-1
  1577  046A  1D03               	skipz
  1578  046B  2C67               	goto	u575
  1579  046C  0873               	movf	dispLCD_lincol@col,w
  1580  046D  0774               	addwf	??_dispLCD_lincol,w
  1581  046E  397F               	andlw	127
  1582  046F  3E80               	addlw	128
  1583  0470  120A  118A  269A  120A  118A  	fcall	_dispLCD_instReg
  1584  0475                     l38:
  1585  0475  0008               	return
  1586  0476                     __end_of_dispLCD_lincol:
  1587                           
  1588                           	psect	text7
  1589  04B0                     __ptext7:	
  1590 ;; *************** function _dispLCD_dataReg *****************
  1591 ;; Defined at:
  1592 ;;		line 88 in file "dispLCD4vias.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  d               1    wreg     unsigned char 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  d               1    1[COMMON] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       0       0       0
  1607 ;;      Locals:         1       0       0       0       0
  1608 ;;      Temps:          1       0       0       0       0
  1609 ;;      Totals:         2       0       0       0       0
  1610 ;;Total ram usage:        2 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_LCD_str
  1616 ;;		_LCD_num
  1617 ;;		_LCD_Texto
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           
  1622                           ;psect for function _dispLCD_dataReg
  1623  04B0                     _dispLCD_dataReg:
  1624                           
  1625                           ;incstack = 0
  1626                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  1627                           ;dispLCD_dataReg@d stored from wreg
  1628  04B0  00F1               	movwf	dispLCD_dataReg@d
  1629  04B1                     l1040:
  1630                           
  1631                           ;dispLCD4vias.c: 88: void dispLCD_dataReg( unsigned char d );dispLCD4vias.c: 89: {;dispL
      +                          CD4vias.c: 90:     LCDbits.RS = 1;
  1632  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1633  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1634  04B3  1608               	bsf	8,4	;volatile
  1635  04B4                     l1042:
  1636                           
  1637                           ;dispLCD4vias.c: 91:     LCDbits.BUS = d >> 4;
  1638  04B4  0871               	movf	dispLCD_dataReg@d,w
  1639  04B5  00F0               	movwf	??_dispLCD_dataReg
  1640  04B6  3004               	movlw	4
  1641  04B7                     u565:
  1642  04B7  1003               	clrc
  1643  04B8  0CF0               	rrf	??_dispLCD_dataReg,f
  1644  04B9  3EFF               	addlw	-1
  1645  04BA  1D03               	skipz
  1646  04BB  2CB7               	goto	u565
  1647  04BC  0808               	movf	8,w	;volatile
  1648  04BD  0670               	xorwf	??_dispLCD_dataReg,w
  1649  04BE  39F0               	andlw	-16
  1650  04BF  0670               	xorwf	??_dispLCD_dataReg,w
  1651  04C0  0088               	movwf	8	;volatile
  1652  04C1                     l1044:
  1653                           
  1654                           ;dispLCD4vias.c: 92:     LCDbits.EN = 0;
  1655  04C1  1288               	bcf	8,5	;volatile
  1656  04C2                     l1046:
  1657                           
  1658                           ;dispLCD4vias.c: 93:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1659  04C2  300D               	movlw	13
  1660  04C3  00F0               	movwf	??_dispLCD_dataReg
  1661  04C4                     u967:
  1662  04C4  0BF0               	decfsz	??_dispLCD_dataReg,f
  1663  04C5  2CC4               	goto	u967
  1664  04C6                     l1048:
  1665                           
  1666                           ;dispLCD4vias.c: 94:     LCDbits.EN = 1;
  1667  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  1668  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  1669  04C8  1688               	bsf	8,5	;volatile
  1670  04C9                     l1050:
  1671                           
  1672                           ;dispLCD4vias.c: 96:     LCDbits.RS = 1;
  1673  04C9  1608               	bsf	8,4	;volatile
  1674  04CA                     l1052:
  1675                           
  1676                           ;dispLCD4vias.c: 97:     LCDbits.BUS = d & 0x0F;
  1677  04CA  300F               	movlw	15
  1678  04CB  0571               	andwf	dispLCD_dataReg@d,w
  1679  04CC  00F0               	movwf	??_dispLCD_dataReg
  1680  04CD  0808               	movf	8,w	;volatile
  1681  04CE  0670               	xorwf	??_dispLCD_dataReg,w
  1682  04CF  39F0               	andlw	-16
  1683  04D0  0670               	xorwf	??_dispLCD_dataReg,w
  1684  04D1  0088               	movwf	8	;volatile
  1685  04D2                     l1054:
  1686                           
  1687                           ;dispLCD4vias.c: 98:     LCDbits.EN = 0;
  1688  04D2  1288               	bcf	8,5	;volatile
  1689                           
  1690                           ;dispLCD4vias.c: 99:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1691  04D3  300D               	movlw	13
  1692  04D4  00F0               	movwf	??_dispLCD_dataReg
  1693  04D5                     u977:
  1694  04D5  0BF0               	decfsz	??_dispLCD_dataReg,f
  1695  04D6  2CD5               	goto	u977
  1696  04D7                     l1056:
  1697                           
  1698                           ;dispLCD4vias.c: 100:     LCDbits.EN = 1;
  1699  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1700  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1701  04D9  1688               	bsf	8,5	;volatile
  1702  04DA                     l35:
  1703  04DA  0008               	return
  1704  04DB                     __end_of_dispLCD_dataReg:
  1705                           
  1706                           	psect	text8
  1707  0574                     __ptext8:	
  1708 ;; *************** function ___awmod *****************
  1709 ;; Defined at:
  1710 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  divisor         2    0[COMMON] int 
  1713 ;;  dividend        2    2[COMMON] int 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  sign            1    6[COMMON] unsigned char 
  1716 ;;  counter         1    5[COMMON] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2    0[COMMON] int 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         4       0       0       0       0
  1727 ;;      Locals:         2       0       0       0       0
  1728 ;;      Temps:          1       0       0       0       0
  1729 ;;      Totals:         7       0       0       0       0
  1730 ;;Total ram usage:        7 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_LCD_num
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function ___awmod
  1741  0574                     ___awmod:
  1742  0574                     l1104:	
  1743                           ;incstack = 0
  1744                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1745                           
  1746  0574  01F6               	clrf	___awmod@sign
  1747  0575                     l1106:
  1748  0575  1FF3               	btfss	___awmod@dividend+1,7
  1749  0576  2D78               	goto	u681
  1750  0577  2D79               	goto	u680
  1751  0578                     u681:
  1752  0578  2D80               	goto	l1112
  1753  0579                     u680:
  1754  0579                     l1108:
  1755  0579  09F2               	comf	___awmod@dividend,f
  1756  057A  09F3               	comf	___awmod@dividend+1,f
  1757  057B  0AF2               	incf	___awmod@dividend,f
  1758  057C  1903               	skipnz
  1759  057D  0AF3               	incf	___awmod@dividend+1,f
  1760  057E                     l1110:
  1761  057E  01F6               	clrf	___awmod@sign
  1762  057F  0AF6               	incf	___awmod@sign,f
  1763  0580                     l1112:
  1764  0580  1FF1               	btfss	___awmod@divisor+1,7
  1765  0581  2D83               	goto	u691
  1766  0582  2D84               	goto	u690
  1767  0583                     u691:
  1768  0583  2D89               	goto	l1116
  1769  0584                     u690:
  1770  0584                     l1114:
  1771  0584  09F0               	comf	___awmod@divisor,f
  1772  0585  09F1               	comf	___awmod@divisor+1,f
  1773  0586  0AF0               	incf	___awmod@divisor,f
  1774  0587  1903               	skipnz
  1775  0588  0AF1               	incf	___awmod@divisor+1,f
  1776  0589                     l1116:
  1777  0589  0870               	movf	___awmod@divisor,w
  1778  058A  0471               	iorwf	___awmod@divisor+1,w
  1779  058B  1903               	btfsc	3,2
  1780  058C  2D8E               	goto	u701
  1781  058D  2D8F               	goto	u700
  1782  058E                     u701:
  1783  058E  2DBE               	goto	l1134
  1784  058F                     u700:
  1785  058F                     l1118:
  1786  058F  01F5               	clrf	___awmod@counter
  1787  0590  0AF5               	incf	___awmod@counter,f
  1788  0591  2D9D               	goto	l1124
  1789  0592                     l1120:
  1790  0592  3001               	movlw	1
  1791  0593                     u715:
  1792  0593  1003               	clrc
  1793  0594  0DF0               	rlf	___awmod@divisor,f
  1794  0595  0DF1               	rlf	___awmod@divisor+1,f
  1795  0596  3EFF               	addlw	-1
  1796  0597  1D03               	skipz
  1797  0598  2D93               	goto	u715
  1798  0599                     l1122:
  1799  0599  3001               	movlw	1
  1800  059A  00F4               	movwf	??___awmod
  1801  059B  0874               	movf	??___awmod,w
  1802  059C  07F5               	addwf	___awmod@counter,f
  1803  059D                     l1124:
  1804  059D  1FF1               	btfss	___awmod@divisor+1,7
  1805  059E  2DA0               	goto	u721
  1806  059F  2DA1               	goto	u720
  1807  05A0                     u721:
  1808  05A0  2D92               	goto	l1120
  1809  05A1                     u720:
  1810  05A1                     l1126:
  1811  05A1  0871               	movf	___awmod@divisor+1,w
  1812  05A2  0273               	subwf	___awmod@dividend+1,w
  1813  05A3  1D03               	skipz
  1814  05A4  2DA7               	goto	u735
  1815  05A5  0870               	movf	___awmod@divisor,w
  1816  05A6  0272               	subwf	___awmod@dividend,w
  1817  05A7                     u735:
  1818  05A7  1C03               	skipc
  1819  05A8  2DAA               	goto	u731
  1820  05A9  2DAB               	goto	u730
  1821  05AA                     u731:
  1822  05AA  2DB1               	goto	l1130
  1823  05AB                     u730:
  1824  05AB                     l1128:
  1825  05AB  0870               	movf	___awmod@divisor,w
  1826  05AC  02F2               	subwf	___awmod@dividend,f
  1827  05AD  0871               	movf	___awmod@divisor+1,w
  1828  05AE  1C03               	skipc
  1829  05AF  03F3               	decf	___awmod@dividend+1,f
  1830  05B0  02F3               	subwf	___awmod@dividend+1,f
  1831  05B1                     l1130:
  1832  05B1  3001               	movlw	1
  1833  05B2                     u745:
  1834  05B2  1003               	clrc
  1835  05B3  0CF1               	rrf	___awmod@divisor+1,f
  1836  05B4  0CF0               	rrf	___awmod@divisor,f
  1837  05B5  3EFF               	addlw	-1
  1838  05B6  1D03               	skipz
  1839  05B7  2DB2               	goto	u745
  1840  05B8                     l1132:
  1841  05B8  3001               	movlw	1
  1842  05B9  02F5               	subwf	___awmod@counter,f
  1843  05BA  1D03               	btfss	3,2
  1844  05BB  2DBD               	goto	u751
  1845  05BC  2DBE               	goto	u750
  1846  05BD                     u751:
  1847  05BD  2DA1               	goto	l1126
  1848  05BE                     u750:
  1849  05BE                     l1134:
  1850  05BE  0876               	movf	___awmod@sign,w
  1851  05BF  1903               	btfsc	3,2
  1852  05C0  2DC2               	goto	u761
  1853  05C1  2DC3               	goto	u760
  1854  05C2                     u761:
  1855  05C2  2DC8               	goto	l1138
  1856  05C3                     u760:
  1857  05C3                     l1136:
  1858  05C3  09F2               	comf	___awmod@dividend,f
  1859  05C4  09F3               	comf	___awmod@dividend+1,f
  1860  05C5  0AF2               	incf	___awmod@dividend,f
  1861  05C6  1903               	skipnz
  1862  05C7  0AF3               	incf	___awmod@dividend+1,f
  1863  05C8                     l1138:
  1864  05C8  0873               	movf	___awmod@dividend+1,w
  1865  05C9  00F1               	movwf	?___awmod+1
  1866  05CA  0872               	movf	___awmod@dividend,w
  1867  05CB  00F0               	movwf	?___awmod
  1868  05CC                     l372:
  1869  05CC  0008               	return
  1870  05CD                     __end_of___awmod:
  1871                           
  1872                           	psect	text9
  1873  0633                     __ptext9:	
  1874 ;; *************** function ___awdiv *****************
  1875 ;; Defined at:
  1876 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  divisor         2    0[COMMON] int 
  1879 ;;  dividend        2    2[COMMON] int 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  quotient        2    7[COMMON] int 
  1882 ;;  sign            1    6[COMMON] unsigned char 
  1883 ;;  counter         1    5[COMMON] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  2    0[COMMON] int 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         4       0       0       0       0
  1894 ;;      Locals:         4       0       0       0       0
  1895 ;;      Temps:          1       0       0       0       0
  1896 ;;      Totals:         9       0       0       0       0
  1897 ;;Total ram usage:        9 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_LCD_num
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function ___awdiv
  1908  0633                     ___awdiv:
  1909  0633                     l1060:	
  1910                           ;incstack = 0
  1911                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1912                           
  1913  0633  01F6               	clrf	___awdiv@sign
  1914  0634                     l1062:
  1915  0634  1FF1               	btfss	___awdiv@divisor+1,7
  1916  0635  2E37               	goto	u581
  1917  0636  2E38               	goto	u580
  1918  0637                     u581:
  1919  0637  2E3F               	goto	l1068
  1920  0638                     u580:
  1921  0638                     l1064:
  1922  0638  09F0               	comf	___awdiv@divisor,f
  1923  0639  09F1               	comf	___awdiv@divisor+1,f
  1924  063A  0AF0               	incf	___awdiv@divisor,f
  1925  063B  1903               	skipnz
  1926  063C  0AF1               	incf	___awdiv@divisor+1,f
  1927  063D                     l1066:
  1928  063D  01F6               	clrf	___awdiv@sign
  1929  063E  0AF6               	incf	___awdiv@sign,f
  1930  063F                     l1068:
  1931  063F  1FF3               	btfss	___awdiv@dividend+1,7
  1932  0640  2E42               	goto	u591
  1933  0641  2E43               	goto	u590
  1934  0642                     u591:
  1935  0642  2E4C               	goto	l1074
  1936  0643                     u590:
  1937  0643                     l1070:
  1938  0643  09F2               	comf	___awdiv@dividend,f
  1939  0644  09F3               	comf	___awdiv@dividend+1,f
  1940  0645  0AF2               	incf	___awdiv@dividend,f
  1941  0646  1903               	skipnz
  1942  0647  0AF3               	incf	___awdiv@dividend+1,f
  1943  0648                     l1072:
  1944  0648  3001               	movlw	1
  1945  0649  00F4               	movwf	??___awdiv
  1946  064A  0874               	movf	??___awdiv,w
  1947  064B  06F6               	xorwf	___awdiv@sign,f
  1948  064C                     l1074:
  1949  064C  01F7               	clrf	___awdiv@quotient
  1950  064D  01F8               	clrf	___awdiv@quotient+1
  1951  064E                     l1076:
  1952  064E  0870               	movf	___awdiv@divisor,w
  1953  064F  0471               	iorwf	___awdiv@divisor+1,w
  1954  0650  1903               	btfsc	3,2
  1955  0651  2E53               	goto	u601
  1956  0652  2E54               	goto	u600
  1957  0653                     u601:
  1958  0653  2E8B               	goto	l1096
  1959  0654                     u600:
  1960  0654                     l1078:
  1961  0654  01F5               	clrf	___awdiv@counter
  1962  0655  0AF5               	incf	___awdiv@counter,f
  1963  0656  2E62               	goto	l1084
  1964  0657                     l1080:
  1965  0657  3001               	movlw	1
  1966  0658                     u615:
  1967  0658  1003               	clrc
  1968  0659  0DF0               	rlf	___awdiv@divisor,f
  1969  065A  0DF1               	rlf	___awdiv@divisor+1,f
  1970  065B  3EFF               	addlw	-1
  1971  065C  1D03               	skipz
  1972  065D  2E58               	goto	u615
  1973  065E                     l1082:
  1974  065E  3001               	movlw	1
  1975  065F  00F4               	movwf	??___awdiv
  1976  0660  0874               	movf	??___awdiv,w
  1977  0661  07F5               	addwf	___awdiv@counter,f
  1978  0662                     l1084:
  1979  0662  1FF1               	btfss	___awdiv@divisor+1,7
  1980  0663  2E65               	goto	u621
  1981  0664  2E66               	goto	u620
  1982  0665                     u621:
  1983  0665  2E57               	goto	l1080
  1984  0666                     u620:
  1985  0666                     l1086:
  1986  0666  3001               	movlw	1
  1987  0667                     u635:
  1988  0667  1003               	clrc
  1989  0668  0DF7               	rlf	___awdiv@quotient,f
  1990  0669  0DF8               	rlf	___awdiv@quotient+1,f
  1991  066A  3EFF               	addlw	-1
  1992  066B  1D03               	skipz
  1993  066C  2E67               	goto	u635
  1994  066D  0871               	movf	___awdiv@divisor+1,w
  1995  066E  0273               	subwf	___awdiv@dividend+1,w
  1996  066F  1D03               	skipz
  1997  0670  2E73               	goto	u645
  1998  0671  0870               	movf	___awdiv@divisor,w
  1999  0672  0272               	subwf	___awdiv@dividend,w
  2000  0673                     u645:
  2001  0673  1C03               	skipc
  2002  0674  2E76               	goto	u641
  2003  0675  2E77               	goto	u640
  2004  0676                     u641:
  2005  0676  2E7E               	goto	l1092
  2006  0677                     u640:
  2007  0677                     l1088:
  2008  0677  0870               	movf	___awdiv@divisor,w
  2009  0678  02F2               	subwf	___awdiv@dividend,f
  2010  0679  0871               	movf	___awdiv@divisor+1,w
  2011  067A  1C03               	skipc
  2012  067B  03F3               	decf	___awdiv@dividend+1,f
  2013  067C  02F3               	subwf	___awdiv@dividend+1,f
  2014  067D                     l1090:
  2015  067D  1477               	bsf	___awdiv@quotient,0
  2016  067E                     l1092:
  2017  067E  3001               	movlw	1
  2018  067F                     u655:
  2019  067F  1003               	clrc
  2020  0680  0CF1               	rrf	___awdiv@divisor+1,f
  2021  0681  0CF0               	rrf	___awdiv@divisor,f
  2022  0682  3EFF               	addlw	-1
  2023  0683  1D03               	skipz
  2024  0684  2E7F               	goto	u655
  2025  0685                     l1094:
  2026  0685  3001               	movlw	1
  2027  0686  02F5               	subwf	___awdiv@counter,f
  2028  0687  1D03               	btfss	3,2
  2029  0688  2E8A               	goto	u661
  2030  0689  2E8B               	goto	u660
  2031  068A                     u661:
  2032  068A  2E66               	goto	l1086
  2033  068B                     u660:
  2034  068B                     l1096:
  2035  068B  0876               	movf	___awdiv@sign,w
  2036  068C  1903               	btfsc	3,2
  2037  068D  2E8F               	goto	u671
  2038  068E  2E90               	goto	u670
  2039  068F                     u671:
  2040  068F  2E95               	goto	l1100
  2041  0690                     u670:
  2042  0690                     l1098:
  2043  0690  09F7               	comf	___awdiv@quotient,f
  2044  0691  09F8               	comf	___awdiv@quotient+1,f
  2045  0692  0AF7               	incf	___awdiv@quotient,f
  2046  0693  1903               	skipnz
  2047  0694  0AF8               	incf	___awdiv@quotient+1,f
  2048  0695                     l1100:
  2049  0695  0878               	movf	___awdiv@quotient+1,w
  2050  0696  00F1               	movwf	?___awdiv+1
  2051  0697  0877               	movf	___awdiv@quotient,w
  2052  0698  00F0               	movwf	?___awdiv
  2053  0699                     l359:
  2054  0699  0008               	return
  2055  069A                     __end_of___awdiv:
  2056                           
  2057                           	psect	text10
  2058  04DB                     __ptext10:	
  2059 ;; *************** function _LCD_init *****************
  2060 ;; Defined at:
  2061 ;;		line 110 in file "dispLCD4vias.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, status,0, pclath, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2075 ;;      Params:         0       0       0       0       0
  2076 ;;      Locals:         0       0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0
  2078 ;;      Totals:         0       0       0       0       0
  2079 ;;Total ram usage:        0 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 1
  2082 ;; This function calls:
  2083 ;;		_dispLCD_instReg
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           
  2090                           ;psect for function _LCD_init
  2091  04DB                     _LCD_init:
  2092  04DB                     l1158:	
  2093                           ;incstack = 0
  2094                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2095                           
  2096                           
  2097                           ;dispLCD4vias.c: 112:     TRISDbits.TRISD0 = 0;
  2098  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2099  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2100  04DD  1008               	bcf	8,0	;volatile
  2101                           
  2102                           ;dispLCD4vias.c: 113:     TRISDbits.TRISD1 = 0;
  2103  04DE  1088               	bcf	8,1	;volatile
  2104                           
  2105                           ;dispLCD4vias.c: 114:     TRISDbits.TRISD2 = 0;
  2106  04DF  1108               	bcf	8,2	;volatile
  2107                           
  2108                           ;dispLCD4vias.c: 115:     TRISDbits.TRISD3 = 0;
  2109  04E0  1188               	bcf	8,3	;volatile
  2110                           
  2111                           ;dispLCD4vias.c: 117:     TRISDbits.TRISD4 = 0;
  2112  04E1  1208               	bcf	8,4	;volatile
  2113                           
  2114                           ;dispLCD4vias.c: 118:     TRISDbits.TRISD5 = 0;
  2115  04E2  1288               	bcf	8,5	;volatile
  2116                           
  2117                           ;dispLCD4vias.c: 119:     TRISDbits.TRISD6 = 1;
  2118  04E3  1708               	bsf	8,6	;volatile
  2119                           
  2120                           ;dispLCD4vias.c: 120:     TRISDbits.TRISD7 = 1;
  2121  04E4  1788               	bsf	8,7	;volatile
  2122  04E5                     l1160:
  2123                           
  2124                           ;dispLCD4vias.c: 122:     ANSELH = 0;
  2125  04E5  1683               	bsf	3,5	;RP0=1, select bank3
  2126  04E6  1703               	bsf	3,6	;RP1=1, select bank3
  2127  04E7  0189               	clrf	9	;volatile
  2128                           
  2129                           ;dispLCD4vias.c: 123:     TRISB = 0;
  2130  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2131  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2132  04EA  0186               	clrf	6	;volatile
  2133                           
  2134                           ;dispLCD4vias.c: 124:     PORTB = 0;
  2135  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2136  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2137  04ED  0186               	clrf	6	;volatile
  2138  04EE                     l1162:
  2139                           
  2140                           ;dispLCD4vias.c: 126:     LCDbits.EN = 1;
  2141  04EE  1688               	bsf	8,5	;volatile
  2142  04EF                     l1164:
  2143                           
  2144                           ;dispLCD4vias.c: 127:     dispLCD_instReg( 0x20|0x00|0x08);
  2145  04EF  3028               	movlw	40
  2146  04F0  120A  118A  269A  120A  118A  	fcall	_dispLCD_instReg
  2147  04F5                     l1166:
  2148                           
  2149                           ;dispLCD4vias.c: 128:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  2150  04F5  300C               	movlw	12
  2151  04F6  120A  118A  269A  120A  118A  	fcall	_dispLCD_instReg
  2152  04FB                     l1168:
  2153                           
  2154                           ;dispLCD4vias.c: 129:     dispLCD_instReg( 0x01 );
  2155  04FB  3001               	movlw	1
  2156  04FC  120A  118A  269A  120A  118A  	fcall	_dispLCD_instReg
  2157  0501                     l1170:
  2158                           
  2159                           ;dispLCD4vias.c: 130:     dispLCD_instReg( 0x02 );
  2160  0501  3002               	movlw	2
  2161  0502  120A  118A  269A  120A  118A  	fcall	_dispLCD_instReg
  2162  0507                     l41:
  2163  0507  0008               	return
  2164  0508                     __end_of_LCD_init:
  2165                           
  2166                           	psect	text11
  2167  069A                     __ptext11:	
  2168 ;; *************** function _dispLCD_instReg *****************
  2169 ;; Defined at:
  2170 ;;		line 55 in file "dispLCD4vias.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  i               1    wreg     unsigned char 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  i               1    2[COMMON] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         0       0       0       0       0
  2185 ;;      Locals:         1       0       0       0       0
  2186 ;;      Temps:          2       0       0       0       0
  2187 ;;      Totals:         3       0       0       0       0
  2188 ;;Total ram usage:        3 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_dispLCD_lincol
  2194 ;;		_LCD_init
  2195 ;;		_dispLCD_clr
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _dispLCD_instReg
  2201  069A                     _dispLCD_instReg:
  2202                           
  2203                           ;incstack = 0
  2204                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  2205                           ;dispLCD_instReg@i stored from wreg
  2206  069A  00F2               	movwf	dispLCD_instReg@i
  2207  069B                     l998:
  2208                           
  2209                           ;dispLCD4vias.c: 55: void dispLCD_instReg( unsigned char i );dispLCD4vias.c: 56: {;dispL
      +                          CD4vias.c: 57:     LCDbits.RS = 0;
  2210  069B  1283               	bcf	3,5	;RP0=0, select bank0
  2211  069C  1303               	bcf	3,6	;RP1=0, select bank0
  2212  069D  1208               	bcf	8,4	;volatile
  2213  069E                     l1000:
  2214                           
  2215                           ;dispLCD4vias.c: 58:     LCDbits.BUS = (i>>4);
  2216  069E  0872               	movf	dispLCD_instReg@i,w
  2217  069F  00F0               	movwf	??_dispLCD_instReg
  2218  06A0  3004               	movlw	4
  2219  06A1                     u495:
  2220  06A1  1003               	clrc
  2221  06A2  0CF0               	rrf	??_dispLCD_instReg,f
  2222  06A3  3EFF               	addlw	-1
  2223  06A4  1D03               	skipz
  2224  06A5  2EA1               	goto	u495
  2225  06A6  0808               	movf	8,w	;volatile
  2226  06A7  0670               	xorwf	??_dispLCD_instReg,w
  2227  06A8  39F0               	andlw	-16
  2228  06A9  0670               	xorwf	??_dispLCD_instReg,w
  2229  06AA  0088               	movwf	8	;volatile
  2230  06AB                     l1002:
  2231                           
  2232                           ;dispLCD4vias.c: 60:     LCDbits.EN = 0;
  2233  06AB  1288               	bcf	8,5	;volatile
  2234                           
  2235                           ;dispLCD4vias.c: 61:     if( i == 0x01 || i == 0x02 )
  2236  06AC  0372               	decf	dispLCD_instReg@i,w
  2237  06AD  1903               	btfsc	3,2
  2238  06AE  2EB0               	goto	u501
  2239  06AF  2EB1               	goto	u500
  2240  06B0                     u501:
  2241  06B0  2EB7               	goto	l1006
  2242  06B1                     u500:
  2243  06B1                     l1004:
  2244  06B1  3002               	movlw	2
  2245  06B2  0672               	xorwf	dispLCD_instReg@i,w
  2246  06B3  1D03               	btfss	3,2
  2247  06B4  2EB6               	goto	u511
  2248  06B5  2EB7               	goto	u510
  2249  06B6                     u511:
  2250  06B6  2EC1               	goto	l1008
  2251  06B7                     u510:
  2252  06B7                     l1006:
  2253                           
  2254                           ;dispLCD4vias.c: 62:         _delay((unsigned long)((2)*(4000000/4000.0)));
  2255  06B7  3003               	movlw	3
  2256  06B8  00F1               	movwf	??_dispLCD_instReg+1
  2257  06B9  3097               	movlw	151
  2258  06BA  00F0               	movwf	??_dispLCD_instReg
  2259  06BB                     u987:
  2260  06BB  0BF0               	decfsz	??_dispLCD_instReg,f
  2261  06BC  2EBB               	goto	u987
  2262  06BD  0BF1               	decfsz	??_dispLCD_instReg+1,f
  2263  06BE  2EBB               	goto	u987
  2264  06BF  2EC0               	nop2
  2265  06C0  2EC5               	goto	l1010
  2266  06C1                     l1008:
  2267                           
  2268                           ;dispLCD4vias.c: 64:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2269  06C1  300D               	movlw	13
  2270  06C2  00F0               	movwf	??_dispLCD_instReg
  2271  06C3                     u997:
  2272  06C3  0BF0               	decfsz	??_dispLCD_instReg,f
  2273  06C4  2EC3               	goto	u997
  2274  06C5                     l1010:
  2275                           
  2276                           ;dispLCD4vias.c: 65:     LCDbits.EN = 1;
  2277  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2278  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  2279  06C7  1688               	bsf	8,5	;volatile
  2280  06C8                     l1012:
  2281                           
  2282                           ;dispLCD4vias.c: 68:     if( (i & 0xF0) == (0x20 | 0x00) )
  2283  06C8  30F0               	movlw	240
  2284  06C9  0572               	andwf	dispLCD_instReg@i,w
  2285  06CA  00F0               	movwf	??_dispLCD_instReg
  2286  06CB  3020               	movlw	32
  2287  06CC  0670               	xorwf	??_dispLCD_instReg,w
  2288  06CD  1D03               	btfss	3,2
  2289  06CE  2ED0               	goto	u521
  2290  06CF  2ED1               	goto	u520
  2291  06D0                     u521:
  2292  06D0  2EE7               	goto	l1024
  2293  06D1                     u520:
  2294  06D1                     l1014:
  2295                           
  2296                           ;dispLCD4vias.c: 69:     {;dispLCD4vias.c: 70:         LCDbits.RS = 0;
  2297  06D1  1208               	bcf	8,4	;volatile
  2298  06D2                     l1016:
  2299                           
  2300                           ;dispLCD4vias.c: 71:         LCDbits.BUS = i>>4;
  2301  06D2  0872               	movf	dispLCD_instReg@i,w
  2302  06D3  00F0               	movwf	??_dispLCD_instReg
  2303  06D4  3004               	movlw	4
  2304  06D5                     u535:
  2305  06D5  1003               	clrc
  2306  06D6  0CF0               	rrf	??_dispLCD_instReg,f
  2307  06D7  3EFF               	addlw	-1
  2308  06D8  1D03               	skipz
  2309  06D9  2ED5               	goto	u535
  2310  06DA  0808               	movf	8,w	;volatile
  2311  06DB  0670               	xorwf	??_dispLCD_instReg,w
  2312  06DC  39F0               	andlw	-16
  2313  06DD  0670               	xorwf	??_dispLCD_instReg,w
  2314  06DE  0088               	movwf	8	;volatile
  2315  06DF                     l1018:
  2316                           
  2317                           ;dispLCD4vias.c: 72:         LCDbits.EN = 0;
  2318  06DF  1288               	bcf	8,5	;volatile
  2319  06E0                     l1020:
  2320                           
  2321                           ;dispLCD4vias.c: 73:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2322  06E0  300D               	movlw	13
  2323  06E1  00F0               	movwf	??_dispLCD_instReg
  2324  06E2                     u1007:
  2325  06E2  0BF0               	decfsz	??_dispLCD_instReg,f
  2326  06E3  2EE2               	goto	u1007
  2327  06E4                     l1022:
  2328                           
  2329                           ;dispLCD4vias.c: 74:         LCDbits.EN = 1;
  2330  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  2331  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  2332  06E6  1688               	bsf	8,5	;volatile
  2333  06E7                     l1024:
  2334                           
  2335                           ;dispLCD4vias.c: 77:     LCDbits.RS = 0;
  2336  06E7  1208               	bcf	8,4	;volatile
  2337  06E8                     l1026:
  2338                           
  2339                           ;dispLCD4vias.c: 78:     LCDbits.BUS = i & 0x0F;
  2340  06E8  300F               	movlw	15
  2341  06E9  0572               	andwf	dispLCD_instReg@i,w
  2342  06EA  00F0               	movwf	??_dispLCD_instReg
  2343  06EB  0808               	movf	8,w	;volatile
  2344  06EC  0670               	xorwf	??_dispLCD_instReg,w
  2345  06ED  39F0               	andlw	-16
  2346  06EE  0670               	xorwf	??_dispLCD_instReg,w
  2347  06EF  0088               	movwf	8	;volatile
  2348  06F0                     l1028:
  2349                           
  2350                           ;dispLCD4vias.c: 79:     LCDbits.EN = 0;
  2351  06F0  1288               	bcf	8,5	;volatile
  2352  06F1                     l1030:
  2353                           
  2354                           ;dispLCD4vias.c: 80:     if( i == 0x01 || i == 0x02 )
  2355  06F1  0372               	decf	dispLCD_instReg@i,w
  2356  06F2  1903               	btfsc	3,2
  2357  06F3  2EF5               	goto	u541
  2358  06F4  2EF6               	goto	u540
  2359  06F5                     u541:
  2360  06F5  2EFC               	goto	l1034
  2361  06F6                     u540:
  2362  06F6                     l1032:
  2363  06F6  3002               	movlw	2
  2364  06F7  0672               	xorwf	dispLCD_instReg@i,w
  2365  06F8  1D03               	btfss	3,2
  2366  06F9  2EFB               	goto	u551
  2367  06FA  2EFC               	goto	u550
  2368  06FB                     u551:
  2369  06FB  2F06               	goto	l1036
  2370  06FC                     u550:
  2371  06FC                     l1034:
  2372                           
  2373                           ;dispLCD4vias.c: 81:         _delay((unsigned long)((2)*(4000000/4000.0)));
  2374  06FC  3003               	movlw	3
  2375  06FD  00F1               	movwf	??_dispLCD_instReg+1
  2376  06FE  3097               	movlw	151
  2377  06FF  00F0               	movwf	??_dispLCD_instReg
  2378  0700                     u1017:
  2379  0700  0BF0               	decfsz	??_dispLCD_instReg,f
  2380  0701  2F00               	goto	u1017
  2381  0702  0BF1               	decfsz	??_dispLCD_instReg+1,f
  2382  0703  2F00               	goto	u1017
  2383  0704  2F05               	nop2
  2384  0705  2F0A               	goto	l1038
  2385  0706                     l1036:
  2386                           
  2387                           ;dispLCD4vias.c: 83:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2388  0706  300D               	movlw	13
  2389  0707  00F0               	movwf	??_dispLCD_instReg
  2390  0708                     u1027:
  2391  0708  0BF0               	decfsz	??_dispLCD_instReg,f
  2392  0709  2F08               	goto	u1027
  2393  070A                     l1038:
  2394                           
  2395                           ;dispLCD4vias.c: 84:     LCDbits.EN = 1;
  2396  070A  1283               	bcf	3,5	;RP0=0, select bank0
  2397  070B  1303               	bcf	3,6	;RP1=0, select bank0
  2398  070C  1688               	bsf	8,5	;volatile
  2399  070D                     l32:
  2400  070D  0008               	return
  2401  070E                     __end_of_dispLCD_instReg:
  2402  0006                     
  2403                           	psect	functab
  2404  0003                     __pfunctab:
  2405  0003                     __fptable:
  2406  0003                     fptable:
  2407  0003  00FF               	movwf	(btemp+1)& (0+127)
  2408  0004  3000               	movlw	high fptable
  2409  0005  008A               	movwf	10
  2410  0006  087F               	movf	(btemp+1)& (0+127),w
  2411  0007  0782               	addwf	2,f
  2412  0008                     fpbase:
  2413  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2414  0009                     fp__LCD_init:
  2415  0009  120A  118A  2CDB   	ljmp	_LCD_init
  2416  000C                     fp__LCD_num:
  2417  000C  120A  118A  2F0E   	ljmp	_LCD_num
  2418  000F                     fp__LCD_str:
  2419  000F  120A  118A  2D3C   	ljmp	_LCD_str
  2420  0012                     __end_of__fptable:
  2421  007E                     btemp	set	126	;btemp
  2422  007E                     wtemp0	set	126
  2423                           
  2424                           	psect	config
  2425                           
  2426                           ;Config register CONFIG1 @ 0x2007
  2427                           ;	Oscillator Selection bits
  2428                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2429                           ;	Watchdog Timer Enable bit
  2430                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2431                           ;	Power-up Timer Enable bit
  2432                           ;	PWRTE = OFF, PWRT disabled
  2433                           ;	RE3/MCLR pin function select bit
  2434                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2435                           ;	Code Protection bit
  2436                           ;	CP = OFF, Program memory code protection is disabled
  2437                           ;	Data Code Protection bit
  2438                           ;	CPD = OFF, Data memory code protection is disabled
  2439                           ;	Brown Out Reset Selection bits
  2440                           ;	BOREN = OFF, BOR disabled
  2441                           ;	Internal External Switchover bit
  2442                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2443                           ;	Fail-Safe Clock Monitor Enabled bit
  2444                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2445                           ;	Low Voltage Programming Enable bit
  2446                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2447                           ;	In-Circuit Debugger Mode bit
  2448                           ;	DEBUG = 0x1, unprogrammed default
  2449  2007                     	org	8199
  2450  2007  20D4               	dw	8404
  2451                           
  2452                           ;Config register CONFIG2 @ 0x2008
  2453                           ;	Brown-out Reset Selection bit
  2454                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2455                           ;	Flash Program Memory Self Write Enable bits
  2456                           ;	WRT = OFF, Write protection off
  2457  2008                     	org	8200
  2458  2008  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    0
    Data        7
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S120$2$2	PTR const unsigned char  size(1) Largest target is 0

    S120$1$0	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[14]), STR_1(CODE[15]), 

    S120$B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> lcd_b1(), 

    print.B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> lcd_b1(), 

    S120$B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> lcd_b0(), 

    print.B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> lcd_b0(), 

    S120$clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    print.clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    S120$number	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> LCD_num(), 

    print.number	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> LCD_num(), 

    S120$str_position	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> LCD_Texto(), 

    print.str_position	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> LCD_Texto(), 

    S120$string	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> LCD_str(), 

    print.string	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> LCD_str(), 

    S120$init	PTR FTN()void  size(1) Largest target is 1
		 -> LCD_init(), 

    print.init	PTR FTN()void  size(1) Largest target is 1
		 -> LCD_init(), 

    LCD_str@str	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCD_num
    _num_primo->___lbmod
    _LCD_str->_dispLCD_lincol
    _LCD_num->___awdiv
    _dispLCD_lincol->_dispLCD_instReg
    _LCD_init->_dispLCD_instReg

Critical Paths under _main in BANK0

    _main->_LCD_num

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4153
                                              7 BANK0      4     4      0
                           _LCD_init *
                            _LCD_num *
                            _LCD_str *
                          _num_primo
                        _return_nump
 ---------------------------------------------------------------------------------
 (1) _return_nump                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _num_primo                                            5     5      0     372
                                              7 COMMON     5     5      0
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              7     6      1     235
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (1) _LCD_str                                              2     1      1     741
                                              6 COMMON     2     1      1
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (1) _LCD_num                                             12     7      5    2797
                                              9 COMMON     5     0      5
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     524
                                              3 COMMON     3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0     176
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init *
     _dispLCD_instReg
   _LCD_num *
     ___awdiv
     ___awmod
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _LCD_str *
     _dispLCD_dataReg
     _dispLCD_lincol
   _num_primo *
     ___lbmod
   _return_nump *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Aug 27 18:46:09 2021

                       pc 0002                        l32 070D                        l41 0507  
                      l35 04DA                        l38 0475                        l71 07EC  
                      l48 0573                        l69 07A1              ___awdiv@sign 0076  
 __end_of_dispLCD_dataReg 04DB                        fsr 0004                       l110 0462  
                     l103 0523                       l107 053B                       l416 04A8  
                     l418 04AF                       l372 05CC                       l359 0699  
                     l998 069B                       u500 06B1                       u501 06B0  
                     u510 06B7                       u511 06B6                       u520 06D1  
                     u600 0654                       u521 06D0                       u601 0653  
                     u540 06F6                       u620 0666                       u700 058F  
                     u541 06F5                       u621 0665                       u701 058E  
                     u550 06FC                       u551 06FB                       u535 06D5  
                     u615 0658                       u640 0677                       u720 05A1  
                     u800 0550                       u641 0676                       u721 05A0  
                     u801 054F                       u730 05AB                       u810 0573  
                     u635 0667                       u731 05AA                       u715 0593  
                     u811 0572                       u660 068B                       u580 0638  
                     u900 07EC                       u820 0713                       u661 068A  
                     u645 0673                       u581 0637                       u565 04B7  
                     u901 07EB                       u821 0711                       u670 0690  
                     u590 0643                       u750 05BE                       u830 0714  
                     u910 051F                       u495 06A1                       u671 068F  
                     u655 067F                       u591 0642                       u751 05BD  
                     u735 05A7                       u575 0467                       u911 051E  
                     u760 05C3                       u680 0579                       u840 071E  
                     u920 0529                       u761 05C2                       u745 05B2  
                     u681 0578                       u905 07E8                       u841 071D  
                     u921 0528                       u690 0584                       u850 074D  
                     u930 053B                       u691 0583                       u851 074C  
                     u931 053A                       u860 0771                       u780 04A6  
                     u861 0770                       u781 04A5                       u870 078E  
                     u790 04AE                       u950 05EC                       u871 078D  
                     u791 04AD                       u775 0492                       u951 05EB  
                     u880 0794                       u881 0793                       u865 076D  
                     u890 079B                       u891 079A                       u875 078A  
                     u967 04C4                       u977 04D5                       u987 06BB  
                     u997 06C3                       fsr0 0004                       indf 0000  
 __end_of_dispLCD_instReg 070E              ___awmod@sign 0076           __end_of_LCD_num 07ED  
                    l1000 069E                      l1010 06C5                      l1002 06AB  
                    l1020 06E0                      l1012 06C8                      l1004 06B1  
                    l1100 0695                      l1030 06F1                      l1022 06E4  
                    l1014 06D1                      l1006 06B7                      l1110 057E  
                    l1032 06F6                      l1016 06D2                      l1024 06E7  
                    l1008 06C1                      l1120 0592                      l1112 0580  
                    l1104 0574                      l1040 04B1                      l1200 0751  
                    l1034 06FC                      l1026 06E8                      l1018 06DF  
                    l1130 05B1                      l1122 0599                      l1114 0584  
                    l1106 0575                      l1050 04C9                      l1042 04B4  
                    l1210 078E                      l1202 0764                      l1036 0706  
                    l1028 06F0                      l1060 0633                      l1132 05B8  
                    l1124 059D                      l1116 0589                      l1108 0579  
                    l1052 04CA                      l1044 04C1                      l1212 0794  
                    l1204 0772                      l1220 050A                      l1038 070A  
                    l1070 0643                      l1062 0634                      l1126 05A1  
                    l1118 058F                      l1134 05BE                      l1054 04D2  
                    l1046 04C2                      l1214 079B                      l1206 0778  
                    l1150 04A0                      l1142 048A                      l1230 052E  
                    l1222 050E                      l1160 04E5                      l1080 0657  
                    l1072 0648                      l1064 0638                      l1136 05C3  
                    l1128 05AB                      l1056 04D7                      l1048 04C6  
                    l1216 07DF                      l1208 077A                      l1152 04A6  
                    l1144 048E                      l1232 0531                      l1224 0510  
         __end_of_LCD_str 0574                      l1170 0501                      l1162 04EE  
                    l1090 067D                      l1082 065E                      l1074 064C  
                    l1066 063D                      l1138 05C8                      l1058 0464  
                    l1154 04AE                      l1146 048F                      l1226 051F  
                    l1234 0535                      l1218 0509                      l1164 04EF  
                    l1092 067E                      l1084 0662                      l1076 064E  
                    l1068 063F                      l1180 0563                      l1172 053C  
                    l1148 049E                      l1228 0529                      l1236 0459  
                    l1260 05E1                      l1166 04F5                      l1158 04DB  
                    l1094 0685                      l1086 0666                      l1078 0654  
                    l1190 0723                      l1174 0544                      l1182 0567  
                    l1262 05EC                      l1254 05CD                      l1168 04FB  
                    l1088 0677                      l1096 068B                      l1192 072D  
                    l1184 070E                      l1176 0550                      l1264 05F8  
                    l1256 05D3                      l1098 0690                      l1194 0733  
                    l1186 0719                      l1178 0557                      l1266 060E  
                    l1258 05D9                      l1196 0738                      l1188 071E  
                    l1268 061A                      l1198 074D                      STR_1 0018  
                    STR_2 0027                      u1007 06E2                      u1017 0700  
                    u1027 0708                      _main 05CD                      btemp 007E  
                    start 0000          __end_of_LCD_init 0508                     ?_main 0070  
         __end_of___awdiv 069A           __end_of___awmod 05CD           __end_of___lbmod 04B0  
         ___awdiv@divisor 0070           ___awdiv@counter 0075                     _PORTB 0006  
                   _TRISB 0086                     _value 0032                     _print 002B  
                   fpbase 0008                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07ED              __end_of_main 0633  
             LCD_num@size 0023          ?_dispLCD_dataReg 0070                    ??_main 0027  
               ??_LCD_num 0020                 ??_LCD_str 0077          ?_dispLCD_instReg 0070  
        ___awdiv@dividend 0072                    _ANSELH 0189          __end_of__fptable 0012  
               ??___awdiv 0074                 ??___awmod 0074                 ??___lbmod 0071  
                  _lcd_b0 0000                    _lcd_b1 0000          ___awdiv@quotient 0077  
         ___awmod@divisor 0070           ___awmod@counter 0075                    fptable 0003  
                  fptotal 0006              ?_return_nump 0070           ___lbmod@divisor 0070  
 __end_of__initialization 07FC           ___lbmod@counter 0075                 ?_LCD_init 0070  
 __size_of_dispLCD_lincol 0013            __pcstackCOMMON 0070              __pidataBANK0 0452  
            LCD_num@sinal 0024                __pbssBANK0 0032                ??_LCD_init 0073  
              __pmaintext 05CD        __size_of_num_primo 0034                   _LCD_num 070E  
                 _LCDbits 0008                   _LCD_str 053C                __stringtab 0012  
                 ___awdiv 0633                   ___awmod 0574                   ___lbmod 0489  
                 __ptext1 0459                   __ptext2 0508                   __ptext3 0489  
                 __ptext4 053C                   __ptext5 070E                   __ptext6 0463  
                 __ptext7 04B0                   __ptext8 0574                   __ptext9 0633  
        ___awmod@dividend 0072                fp__LCD_num 000C                fp__LCD_str 000F  
               _LCD_Texto 0000      end_of_initialization 07FC      __size_of_return_nump 000A  
          _dispLCD_lincol 0463         __end_of_num_primo 053C          ___lbmod@dividend 0074  
               _TRISDbits 0088  __size_of_dispLCD_dataReg 002B    __end_of_dispLCD_lincol 0476  
             ___lbmod@rem 0076  __size_of_dispLCD_instReg 0074         __size_of_LCD_init 002D  
     start_initialization 07ED                LCD_num@col 007A                LCD_num@div 0025  
              LCD_num@lin 0079                LCD_num@tam 007D                LCD_num@num 007B  
              LCD_str@str 0076           ?_dispLCD_lincol 0073         dispLCD_lincol@col 0073  
       dispLCD_lincol@lin 0075                init_fetch0 0476               __pdataBANK0 002B  
                ?_LCD_num 0079                  ?_LCD_str 0076                 ___latbits 0002  
           __pcstackBANK0 0020         __size_of__fptable 000F         ??_dispLCD_dataReg 0070  
       ??_dispLCD_instReg 0070                 __pfunctab 0003                  ?___awdiv 0070  
                ?___awmod 0070                  ?___lbmod 0070               _dispLCD_clr 0000  
               __pstrings 0012                  _LCD_init 04DB                 _num_primo 0508  
        dispLCD_dataReg@d 0071                num_primo@i 007B                num_primo@x 0078  
             __stringbase 0017                 main@valor 0029          __size_of_LCD_num 00DF  
        __size_of_LCD_str 0038             ??_return_nump 0072          dispLCD_instReg@i 0072  
              ?_num_primo 0070          __size_of___awdiv 0067          __size_of___awmod 0059  
        __size_of___lbmod 0027        __end_of__stringtab 0018                  __fptable 0003  
        ??_dispLCD_lincol 0074                  __ptext10 04DB                  __ptext11 069A  
           __size_of_main 0066       __end_of_return_nump 0463               fp__LCD_init 0009  
         _dispLCD_dataReg 04B0                  init_ram0 047A           _dispLCD_instReg 069A  
               stringcode 0012               ??_num_primo 0077                  stringdir 0012  
                stringtab 0012               _return_nump 0459            num_primo@num_p 007A  
           num_primo@cont 0079  
